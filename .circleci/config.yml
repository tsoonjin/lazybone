version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:12

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore Npm Package Cache
      keys:
        - yarn-cache-{{ checksum "yarn.lock" }}

  install_node_modules: &install_node_modules
    run:
      name: Install dependencies
      command: yarn

  save_cache: &save_cache
    save_cache:
      name: Save NPM package cache
      key: yarn-cache-{{ checksum "yarn.lock" }}
      paths:
        - ./node_modules


jobs:
  test:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *save_cache
      - run:
          name: Test
          command: yarn test

  build:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: ./
          paths:
            - public

  deploy-vercel:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Install vercel-cli
          command: yarn add vercel
      - run:
          name: Deploy to Vercel
          command: ./node_modules/.bin/vercel --token $VERCEL_TOKEN --confirm ./public
  deploy-netlify:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Install netlify-cli
          command: yarn add netlify-cli
      - run:
          name: Deploy to Netlify
          command: ./node_modules/.bin/netlify deploy --auth $NETLIFY_TOKEN --site $NETLIFY_SITE_ID --dir=./public --prod

workflows:
  develop:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy-vercel:
          context: app
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-netlify:
          context: app
          requires:
            - build
          filters:
            branches:
              only: master
